{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./FeedbackForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedbackForm=()=>{const[formData,setFormData]=useState({name:'',email:'',message:''});const[submitted,setSubmitted]=useState(false);const[loading,setLoading]=useState(false);const[errors,setErrors]=useState({});const navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const validateForm=()=>{const newErrors={};if(!formData.name)newErrors.name='Name is required';if(!formData.email)newErrors.email='Email is required';if(!formData.message)newErrors.message='Message is required';return newErrors;};const handleBackToHome=()=>{navigate('/');// Adjust the route as needed\n};const handleSubmit=async e=>{e.preventDefault();const formErrors=validateForm();if(Object.keys(formErrors).length>0){setErrors(formErrors);return;}setLoading(true);setErrors({});try{// Here you would typically handle form submission, e.g., sending data to an API\nconsole.log('Form submitted:',formData);// Simulate a successful submission with a timeout\nawait new Promise(resolve=>setTimeout(resolve,1000));setSubmitted(true);}catch(error){console.error('Form submission error:',error);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Contact Form\"}),submitted?/*#__PURE__*/_jsx(\"div\",{className:\"thank-you-message\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Thank you for your feedback!\"})}):/*#__PURE__*/_jsxs(\"form\",{className:\"feedback-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleChange,required:true}),errors.name&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errors.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true}),errors.email&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-field\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"message\",children:\"Message:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"message\",name:\"message\",value:formData.message,onChange:handleChange,rows:\"4\",required:true}),errors.message&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errors.message})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",disabled:loading,children:loading?'Submitting...':'Submit'})]}),\"  \",/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToHome,className:\"back-to-home-button\",children:\"Back to Home\"})]});};export default FeedbackForm;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","FeedbackForm","formData","setFormData","name","email","message","submitted","setSubmitted","loading","setLoading","errors","setErrors","navigate","handleChange","e","value","target","validateForm","newErrors","handleBackToHome","handleSubmit","preventDefault","formErrors","Object","keys","length","console","log","Promise","resolve","setTimeout","error","className","children","onSubmit","htmlFor","type","id","onChange","required","rows","disabled","onClick"],"sources":["D:/New folder (2)/portfolio/FRONTEND/src/components/Feedbaackform.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './FeedbackForm.css'\r\nconst FeedbackForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        message: '',\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const navigate = useNavigate();\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        if (!formData.name) newErrors.name = 'Name is required';\r\n        if (!formData.email) newErrors.email = 'Email is required';\r\n        if (!formData.message) newErrors.message = 'Message is required';\r\n        return newErrors;\r\n    };\r\n    const handleBackToHome = () => {\r\n        navigate('/'); // Adjust the route as needed\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm();\r\n        if (Object.keys(formErrors).length > 0) {\r\n            setErrors(formErrors);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setErrors({});\r\n        try {\r\n            // Here you would typically handle form submission, e.g., sending data to an API\r\n            console.log('Form submitted:', formData);\r\n            // Simulate a successful submission with a timeout\r\n            await new Promise((resolve) => setTimeout(resolve, 1000));\r\n            setSubmitted(true);\r\n        } catch (error) {\r\n            console.error('Form submission error:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"feedback-container\">\r\n            <h2>Contact Form</h2>\r\n            {submitted ? (\r\n                <div className=\"thank-you-message\">\r\n                    <h3>Thank you for your feedback!</h3>\r\n                </div>\r\n            ) : (\r\n                <form className=\"feedback-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            value={formData.name}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                        {errors.name && <p className=\"error-message\">{errors.name}</p>}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                        {errors.email && <p className=\"error-message\">{errors.email}</p>}\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"message\">Message:</label>\r\n                        <textarea\r\n                            id=\"message\"\r\n                            name=\"message\"\r\n                            value={formData.message}\r\n                            onChange={handleChange}\r\n                            rows=\"4\"\r\n                            required\r\n                        />\r\n                        {errors.message && <p className=\"error-message\">{errors.message}</p>}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n                        {loading ? 'Submitting...' : 'Submit'}\r\n                    </button>\r\n                </form>\r\n            )}  <button onClick={handleBackToHome} className=\"back-to-home-button\">\r\n            Back to Home\r\n        </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedbackForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}