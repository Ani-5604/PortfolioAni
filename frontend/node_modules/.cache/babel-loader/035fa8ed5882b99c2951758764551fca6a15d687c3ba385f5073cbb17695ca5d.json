{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Web\\\\MeasurementConversion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MeasurementConversion = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [result, setResult] = useState('');\n  const [fromUnit, setFromUnit] = useState('gram (g)');\n  const [toUnit, setToUnit] = useState('kilogram (kg)');\n  const [value, setValue] = useState('');\n  const units = {\n    weight: ['gram (g)', 'kilogram (kg)', 'pound (lb)', 'ounce (oz)'],\n    height: ['meter (m)', 'centimeter (cm)', 'inch (in)', 'foot (ft)'],\n    volume: ['liter (L)', 'milliliter (mL)', 'cubic meter (m³)', 'cubic centimeter (cm³)'],\n    distance: ['kilometer (km)', 'meter (m)', 'mile (mi)', 'yard (yd)'],\n    length: ['meter (m)', 'centimeter (cm)', 'millimeter (mm)', 'inch (in)'],\n    temperature: ['Celsius (°C)', 'Fahrenheit (°F)', 'Kelvin (K)'],\n    speed: ['meter per second (m/s)', 'kilometer per hour (km/h)', 'mile per hour (mph)']\n  };\n  const conversionTable = {\n    weight: {\n      'gram (g)': {\n        'kilogram (kg)': 0.001,\n        'pound (lb)': 0.00220462,\n        'ounce (oz)': 0.035274\n      },\n      'kilogram (kg)': {\n        'gram (g)': 1000,\n        'pound (lb)': 2.20462,\n        'ounce (oz)': 35.274\n      },\n      'pound (lb)': {\n        'gram (g)': 453.592,\n        'kilogram (kg)': 0.453592,\n        'ounce (oz)': 16\n      },\n      'ounce (oz)': {\n        'gram (g)': 28.3495,\n        'kilogram (kg)': 0.0283495,\n        'pound (lb)': 0.0625\n      }\n    }\n    // Add more conversion tables for other categories here...\n  };\n  const categories = Object.keys(units);\n  const handleCategoryChange = category => {\n    setFromUnit(units[category][0]);\n    setToUnit(units[category][1]);\n  };\n  const convert = () => {\n    const category = categories.find(cat => units[cat].includes(fromUnit) && units[cat].includes(toUnit));\n    if (category && conversionTable[category]) {\n      var _conversionTable$cate;\n      const conversionFactor = ((_conversionTable$cate = conversionTable[category][fromUnit]) === null || _conversionTable$cate === void 0 ? void 0 : _conversionTable$cate[toUnit]) || 1;\n      const convertedValue = Number(value) * conversionFactor;\n      setResult(`${convertedValue.toFixed(2)} ${toUnit}`);\n    } else {\n      setResult('Conversion not supported');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"measurement-conversion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Measurement Conversion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleCategoryChange(e.target.value),\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversion-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromUnit,\n          onChange: e => setFromUnit(e.target.value),\n          children: units[categories.find(cat => units[cat].includes(fromUnit))].map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: unit,\n            children: unit\n          }, unit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"To: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: toUnit,\n          onChange: e => setToUnit(e.target.value),\n          children: units[categories.find(cat => units[cat].includes(toUnit))].map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: unit,\n            children: unit\n          }, unit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"convert-button\",\n      onClick: convert,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversion-result\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Result: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(MeasurementConversion, \"Rc1MhXX7+QXyExca/kcF3jI/pQA=\");\n_c = MeasurementConversion;\nexport default MeasurementConversion;\nvar _c;\n$RefreshReg$(_c, \"MeasurementConversion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MeasurementConversion","_s","inputValue","setInputValue","result","setResult","fromUnit","setFromUnit","toUnit","setToUnit","value","setValue","units","weight","height","volume","distance","length","temperature","speed","conversionTable","categories","Object","keys","handleCategoryChange","category","convert","find","cat","includes","_conversionTable$cate","conversionFactor","convertedValue","Number","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","unit","type","onClick","_c","$RefreshReg$"],"sources":["D:/portfolio/frontend/src/components/Web/MeasurementConversion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './calculator.css';\r\n\r\nconst MeasurementConversion = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [result, setResult] = useState('');\r\n    const [fromUnit, setFromUnit] = useState('gram (g)');\r\n    const [toUnit, setToUnit] = useState('kilogram (kg)');\r\n    const [value, setValue] = useState('');\r\n\r\n    const units = {\r\n        weight: ['gram (g)', 'kilogram (kg)', 'pound (lb)', 'ounce (oz)'],\r\n        height: ['meter (m)', 'centimeter (cm)', 'inch (in)', 'foot (ft)'],\r\n        volume: ['liter (L)', 'milliliter (mL)', 'cubic meter (m³)', 'cubic centimeter (cm³)'],\r\n        distance: ['kilometer (km)', 'meter (m)', 'mile (mi)', 'yard (yd)'],\r\n        length: ['meter (m)', 'centimeter (cm)', 'millimeter (mm)', 'inch (in)'],\r\n        temperature: ['Celsius (°C)', 'Fahrenheit (°F)', 'Kelvin (K)'],\r\n        speed: ['meter per second (m/s)', 'kilometer per hour (km/h)', 'mile per hour (mph)']\r\n    };\r\n\r\n    const conversionTable = {\r\n        weight: {\r\n            'gram (g)': {\r\n                'kilogram (kg)': 0.001,\r\n                'pound (lb)': 0.00220462,\r\n                'ounce (oz)': 0.035274,\r\n            },\r\n            'kilogram (kg)': {\r\n                'gram (g)': 1000,\r\n                'pound (lb)': 2.20462,\r\n                'ounce (oz)': 35.274,\r\n            },\r\n            'pound (lb)': {\r\n                'gram (g)': 453.592,\r\n                'kilogram (kg)': 0.453592,\r\n                'ounce (oz)': 16,\r\n            },\r\n            'ounce (oz)': {\r\n                'gram (g)': 28.3495,\r\n                'kilogram (kg)': 0.0283495,\r\n                'pound (lb)': 0.0625,\r\n            },\r\n        },\r\n        // Add more conversion tables for other categories here...\r\n    };\r\n\r\n    const categories = Object.keys(units);\r\n\r\n    const handleCategoryChange = (category) => {\r\n        setFromUnit(units[category][0]);\r\n        setToUnit(units[category][1]);\r\n    };\r\n\r\n    const convert = () => {\r\n        const category = categories.find(cat => units[cat].includes(fromUnit) && units[cat].includes(toUnit));\r\n        if (category && conversionTable[category]) {\r\n            const conversionFactor = conversionTable[category][fromUnit]?.[toUnit] || 1;\r\n            const convertedValue = Number(value) * conversionFactor;\r\n            setResult(`${convertedValue.toFixed(2)} ${toUnit}`);\r\n        } else {\r\n            setResult('Conversion not supported');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"measurement-conversion\">\r\n            <h2>Measurement Conversion</h2>\r\n\r\n            <div className=\"category-select\">\r\n                <label>Category: </label>\r\n                <select onChange={(e) => handleCategoryChange(e.target.value)}>\r\n                    {categories.map(category => (\r\n                        <option key={category} value={category}>{category}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"conversion-inputs\">\r\n                <div>\r\n                    <label>From: </label>\r\n                    <select value={fromUnit} onChange={(e) => setFromUnit(e.target.value)}>\r\n                        {units[categories.find(cat => units[cat].includes(fromUnit))].map(unit => (\r\n                            <option key={unit} value={unit}>{unit}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>To: </label>\r\n                    <select value={toUnit} onChange={(e) => setToUnit(e.target.value)}>\r\n                        {units[categories.find(cat => units[cat].includes(toUnit))].map(unit => (\r\n                            <option key={unit} value={unit}>{unit}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Value: </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"convert-button\" onClick={convert}>Convert</button>\r\n\r\n            {result && (\r\n                <div className=\"conversion-result\">\r\n                    <h3>Result: {result}</h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MeasurementConversion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}