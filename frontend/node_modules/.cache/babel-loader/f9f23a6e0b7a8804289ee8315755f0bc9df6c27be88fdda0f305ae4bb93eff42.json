{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Web\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TicTacToe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [winningLine, setWinningLine] = useState(null);\n  const handleClick = index => {\n    if (board[index] || winner) return;\n    const newBoard = board.slice();\n    newBoard[index] = isXNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n    const winnerInfo = calculateWinner(newBoard);\n    if (winnerInfo) {\n      setWinner(winnerInfo.winner);\n      setWinningLine(winnerInfo.line);\n    }\n  };\n  const calculateWinner = board => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return {\n          winner: board[a],\n          line: lines[i]\n        };\n      }\n    }\n    return null;\n  };\n  const renderSquare = index => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `cell ${winningLine !== null && winningLine !== void 0 && winningLine.includes(index) ? 'highlight' : ''}`,\n      onClick: () => handleClick(index),\n      children: board[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n  const renderWinningLine = () => {\n    if (!winningLine) return null;\n    const positions = winningLine.map(index => getCellPosition(index));\n    const start = positions[0];\n    const end = positions[2];\n    const lineStyle = {\n      top: `${(start.top + end.top) / 2}px`,\n      left: `${(start.left + end.left) / 2}px`,\n      width: `${Math.sqrt(Math.pow(end.left - start.left, 2) + Math.pow(end.top - start.top, 2))}px`,\n      transform: `rotate(${Math.atan2(end.top - start.top, end.left - start.left)}rad)`,\n      transformOrigin: 'left center'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winning-line\",\n      style: lineStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  };\n  const getCellPosition = index => {\n    const row = Math.floor(index / 3);\n    const col = index % 3;\n    return {\n      top: row * 100 + 50,\n      left: col * 100 + 50\n    };\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXNext(true);\n    setWinner(null);\n    setWinningLine(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [board.map((_, index) => renderSquare(index)), renderWinningLine()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-box\",\n      children: [\"Winner: \", winner, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"replayBtn\",\n        onClick: resetGame,\n        children: \"Replay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), !winner && board.every(cell => cell) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-box\",\n      children: [\"Draw!\", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"replayBtn\",\n        onClick: resetGame,\n        children: \"Replay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"AQiLm5VZtpSZz7at74B0nnxQU8E=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TicTacToe","_s","board","setBoard","Array","fill","isXNext","setIsXNext","winner","setWinner","winningLine","setWinningLine","handleClick","index","newBoard","slice","winnerInfo","calculateWinner","line","lines","i","length","a","b","c","renderSquare","className","includes","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderWinningLine","positions","map","getCellPosition","start","end","lineStyle","top","left","width","Math","sqrt","pow","transform","atan2","transformOrigin","style","row","floor","col","resetGame","_","id","every","cell","_c","$RefreshReg$"],"sources":["D:/portfolio/frontend/src/components/Web/TicTacToe.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './TicTacToe.css';\r\n\r\nconst TicTacToe = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [isXNext, setIsXNext] = useState(true);\r\n  const [winner, setWinner] = useState(null);\r\n  const [winningLine, setWinningLine] = useState(null);\r\n\r\n  const handleClick = (index) => {\r\n    if (board[index] || winner) return;\r\n\r\n    const newBoard = board.slice();\r\n    newBoard[index] = isXNext ? 'X' : 'O';\r\n    setBoard(newBoard);\r\n    setIsXNext(!isXNext);\r\n\r\n    const winnerInfo = calculateWinner(newBoard);\r\n    if (winnerInfo) {\r\n      setWinner(winnerInfo.winner);\r\n      setWinningLine(winnerInfo.line);\r\n    }\r\n  };\r\n\r\n  const calculateWinner = (board) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n        return { winner: board[a], line: lines[i] };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderSquare = (index) => {\r\n    return (\r\n      <button\r\n        className={`cell ${winningLine?.includes(index) ? 'highlight' : ''}`}\r\n        onClick={() => handleClick(index)}\r\n      >\r\n        {board[index]}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const renderWinningLine = () => {\r\n    if (!winningLine) return null;\r\n\r\n    const positions = winningLine.map(index => getCellPosition(index));\r\n    const start = positions[0];\r\n    const end = positions[2];\r\n\r\n    const lineStyle = {\r\n      top: `${(start.top + end.top) / 2}px`,\r\n      left: `${(start.left + end.left) / 2}px`,\r\n      width: `${Math.sqrt(Math.pow(end.left - start.left, 2) + Math.pow(end.top - start.top, 2))}px`,\r\n      transform: `rotate(${Math.atan2(end.top - start.top, end.left - start.left)}rad)`,\r\n      transformOrigin: 'left center',\r\n    };\r\n\r\n    return <div className=\"winning-line\" style={lineStyle}></div>;\r\n  };\r\n\r\n  const getCellPosition = (index) => {\r\n    const row = Math.floor(index / 3);\r\n    const col = index % 3;\r\n\r\n    return {\r\n      top: row * 100 + 50,\r\n      left: col * 100 + 50,\r\n    };\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setIsXNext(true);\r\n    setWinner(null);\r\n    setWinningLine(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container1\">\r\n      <h1>Tic Tac Toe</h1>\r\n      <div className=\"board\">\r\n        {board.map((_, index) => renderSquare(index))}\r\n        {renderWinningLine()}\r\n      </div>\r\n      {winner && (\r\n        <div className=\"winner-box\">\r\n          Winner: {winner}\r\n          <button id=\"replayBtn\" onClick={resetGame}>Replay</button>\r\n        </div>\r\n      )}\r\n      {!winner && board.every((cell) => cell) && (\r\n        <div className=\"winner-box\">\r\n          Draw!\r\n          <button id=\"replayBtn\" onClick={resetGame}>Replay</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TicTacToe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}