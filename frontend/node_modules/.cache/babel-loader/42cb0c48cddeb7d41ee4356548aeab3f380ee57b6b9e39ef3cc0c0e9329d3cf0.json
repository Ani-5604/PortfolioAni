{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Web\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './TicTacToe.css';\nimport FeedbackForm from '../Feedbaackform';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const [isPlayingWithComputer, setIsPlayingWithComputer] = useState(false);\n  const [playerNames, setPlayerNames] = useState({\n    X: '',\n    O: ''\n  });\n  const [scores, setScores] = useState({\n    X: 0,\n    O: 0,\n    Draws: 0\n  });\n  const [inputNamesVisible, setInputNamesVisible] = useState(false);\n  const [playerInput, setPlayerInput] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedScores = JSON.parse(localStorage.getItem('tic-tac-toe-scores'));\n    if (storedScores) {\n      setScores(storedScores);\n    }\n  }, []);\n  useEffect(() => {\n    if (isPlayingWithComputer && !isXNext && !calculateWinner(board).length) {\n      const timer = setTimeout(makeComputerMove, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [board, isXNext, isPlayingWithComputer]);\n  const handleClick = index => {\n    const newBoard = board.slice();\n    if (calculateWinner(board).length || board[index]) return;\n    newBoard[index] = isXNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n  };\n  const handleBackToHome = () => {\n    navigate('/'); // Adjust the route as needed\n  };\n  const makeComputerMove = () => {\n    const availableMoves = board.map((val, index) => val === null ? index : null).filter(val => val !== null);\n    const randomMove = availableMoves[Math.floor(Math.random() * availableMoves.length)];\n    handleClick(randomMove);\n  };\n  const handleReplayClick = () => {\n    setBoard(Array(9).fill(null));\n    setIsXNext(true);\n  };\n  const handleFeedbackClick = () => {\n    navigate('/FeedbackForm');\n  };\n  const handlePlayWithFriendClick = () => {\n    setInputNamesVisible(true);\n    setIsPlayingWithComputer(false);\n  };\n  const handlePlayWithComputerClick = () => {\n    setInputNamesVisible(true);\n    setIsPlayingWithComputer(true);\n  };\n  const handleViewScoresClick = () => {\n    alert(`Scores:\\n${playerNames.X || 'Player 1'}: ${scores.X}\\n${playerNames.O || 'Player 2'}: ${scores.O}\\nDraws: ${scores.Draws}`);\n  };\n  const handleNameChange = (event, player) => {\n    setPlayerNames({\n      ...playerNames,\n      [player]: event.target.value\n    });\n  };\n  const handleInputChange = event => {\n    setPlayerInput(event.target.value);\n  };\n  const handleStartGame = () => {\n    if (isPlayingWithComputer) {\n      if (playerInput) {\n        setPlayerNames({\n          X: playerInput,\n          O: 'Computer'\n        });\n        setInputNamesVisible(false);\n        handleReplayClick();\n      } else {\n        alert('Please enter your name.');\n      }\n    } else {\n      if (playerNames.X && playerNames.O) {\n        setInputNamesVisible(false);\n        handleReplayClick();\n      } else {\n        alert('Please enter names for both players.');\n      }\n    }\n  };\n  const winnerLine = calculateWinner(board);\n  const winner = winnerLine.length ? board[winnerLine[0]] : null;\n  const isDraw = !winner && board.every(square => square !== null);\n  useEffect(() => {\n    if (winner || isDraw) {\n      let updatedScores = {\n        ...scores\n      };\n      if (winner) {\n        updatedScores[winner]++;\n      } else if (isDraw) {\n        updatedScores.Draws++;\n      }\n      setScores(updatedScores);\n      localStorage.setItem('tic-tac-toe-scores', JSON.stringify(updatedScores));\n    }\n  }, [winner, isDraw]);\n  let status;\n  if (winner) {\n    status = 'Winner: ' + (playerNames[winner] || winner);\n  } else if (isDraw) {\n    status = 'Draw';\n  } else {\n    status = 'Next player: ' + (isXNext ? playerNames.X || 'Player 1' : playerNames.O || 'Player 2');\n  }\n  const renderSquare = i => {\n    const isWinningSquare = winner && winner.line.includes(i);\n    const cellClass = board[i] === 'X' ? 'cell green' : 'cell red';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${cellClass} ${isWinningSquare ? 'winning-square' : ''}`,\n      onClick: () => handleClick(i),\n      children: board[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"marquee\",\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayWithFriendClick,\n        className: \"action-button\",\n        children: \"Play with Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayWithComputerClick,\n        className: \"action-button\",\n        children: \"Play with Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleViewScoresClick,\n        className: \"action-button\",\n        children: \"View Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFeedbackClick,\n        className: \"action-button\",\n        children: \"Give Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), inputNamesVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-name-inputs\",\n      children: [isPlayingWithComputer ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerInput\",\n          children: \"Your Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"playerInput\",\n          type: \"text\",\n          value: playerInput,\n          onChange: handleInputChange,\n          placeholder: \"Enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"playerX\",\n            children: \"Player X Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"playerX\",\n            type: \"text\",\n            value: playerNames.X,\n            onChange: e => handleNameChange(e, 'X'),\n            placeholder: \"Enter Player 1's name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"playerO\",\n            children: \"Player O Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"playerO\",\n            type: \"text\",\n            value: playerNames.O,\n            onChange: e => handleNameChange(e, 'O'),\n            placeholder: \"Enter Player 2's name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        className: \"action-button\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), !inputNamesVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: [renderSquare(0), renderSquare(1), renderSquare(2), renderSquare(3), renderSquare(4), renderSquare(5), renderSquare(6), renderSquare(7), renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), (winner || isDraw) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-box\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"replayBtn\",\n          onClick: handleReplayClick,\n          children: \"Replay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFeedbackClick,\n          id: \"feedbackBtn\",\n          children: \"Give Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToHome,\n          className: \"back-to-home-button\",\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n\n// Helper function to determine the winner\n_s(TicTacToe, \"SjA/iT2mnMXOfPIjFRKOr+hXZLc=\", false, function () {\n  return [useNavigate];\n});\n_c = TicTacToe;\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a, b, c];\n    }\n  }\n  return [];\n};\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FeedbackForm","jsxDEV","_jsxDEV","Fragment","_Fragment","TicTacToe","_s","board","setBoard","Array","fill","isXNext","setIsXNext","isPlayingWithComputer","setIsPlayingWithComputer","playerNames","setPlayerNames","X","O","scores","setScores","Draws","inputNamesVisible","setInputNamesVisible","playerInput","setPlayerInput","navigate","storedScores","JSON","parse","localStorage","getItem","calculateWinner","length","timer","setTimeout","makeComputerMove","clearTimeout","handleClick","index","newBoard","slice","handleBackToHome","availableMoves","map","val","filter","randomMove","Math","floor","random","handleReplayClick","handleFeedbackClick","handlePlayWithFriendClick","handlePlayWithComputerClick","handleViewScoresClick","alert","handleNameChange","event","player","target","value","handleInputChange","handleStartGame","winnerLine","winner","isDraw","every","square","updatedScores","setItem","stringify","status","renderSquare","i","isWinningSquare","line","includes","cellClass","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","placeholder","e","_c","squares","lines","a","b","c","$RefreshReg$"],"sources":["D:/portfolio/frontend/src/components/Web/TicTacToe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TicTacToe.css';\r\nimport FeedbackForm from '../Feedbaackform';\r\n\r\nconst TicTacToe = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [isXNext, setIsXNext] = useState(true);\r\n    const [isPlayingWithComputer, setIsPlayingWithComputer] = useState(false);\r\n    const [playerNames, setPlayerNames] = useState({ X: '', O: '' });\r\n    const [scores, setScores] = useState({ X: 0, O: 0, Draws: 0 });\r\n    const [inputNamesVisible, setInputNamesVisible] = useState(false);\r\n    const [playerInput, setPlayerInput] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const storedScores = JSON.parse(localStorage.getItem('tic-tac-toe-scores'));\r\n        if (storedScores) {\r\n            setScores(storedScores);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isPlayingWithComputer && !isXNext && !calculateWinner(board).length) {\r\n            const timer = setTimeout(makeComputerMove, 500);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [board, isXNext, isPlayingWithComputer]);\r\n\r\n    const handleClick = (index) => {\r\n        const newBoard = board.slice();\r\n        if (calculateWinner(board).length || board[index]) return;\r\n        newBoard[index] = isXNext ? 'X' : 'O';\r\n        setBoard(newBoard);\r\n        setIsXNext(!isXNext);\r\n    };\r\n\r\n    const handleBackToHome = () => {\r\n        navigate('/'); // Adjust the route as needed\r\n    };\r\n\r\n    const makeComputerMove = () => {\r\n        const availableMoves = board.map((val, index) => (val === null ? index : null)).filter(val => val !== null);\r\n        const randomMove = availableMoves[Math.floor(Math.random() * availableMoves.length)];\r\n        handleClick(randomMove);\r\n    };\r\n\r\n    const handleReplayClick = () => {\r\n        setBoard(Array(9).fill(null));\r\n        setIsXNext(true);\r\n    };\r\n\r\n    const handleFeedbackClick = () => {\r\n        navigate('/FeedbackForm');\r\n    };\r\n\r\n    const handlePlayWithFriendClick = () => {\r\n        setInputNamesVisible(true);\r\n        setIsPlayingWithComputer(false);\r\n    };\r\n\r\n    const handlePlayWithComputerClick = () => {\r\n        setInputNamesVisible(true);\r\n        setIsPlayingWithComputer(true);\r\n    };\r\n\r\n    const handleViewScoresClick = () => {\r\n        alert(`Scores:\\n${playerNames.X || 'Player 1'}: ${scores.X}\\n${playerNames.O || 'Player 2'}: ${scores.O}\\nDraws: ${scores.Draws}`);\r\n    };\r\n\r\n    const handleNameChange = (event, player) => {\r\n        setPlayerNames({\r\n            ...playerNames,\r\n            [player]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setPlayerInput(event.target.value);\r\n    };\r\n\r\n    const handleStartGame = () => {\r\n        if (isPlayingWithComputer) {\r\n            if (playerInput) {\r\n                setPlayerNames({ X: playerInput, O: 'Computer' });\r\n                setInputNamesVisible(false);\r\n                handleReplayClick();\r\n            } else {\r\n                alert('Please enter your name.');\r\n            }\r\n        } else {\r\n            if (playerNames.X && playerNames.O) {\r\n                setInputNamesVisible(false);\r\n                handleReplayClick();\r\n            } else {\r\n                alert('Please enter names for both players.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const winnerLine = calculateWinner(board);\r\n    const winner = winnerLine.length ? board[winnerLine[0]] : null;\r\n    const isDraw = !winner && board.every(square => square !== null);\r\n\r\n    useEffect(() => {\r\n        if (winner || isDraw) {\r\n            let updatedScores = { ...scores };\r\n            if (winner) {\r\n                updatedScores[winner]++;\r\n            } else if (isDraw) {\r\n                updatedScores.Draws++;\r\n            }\r\n            setScores(updatedScores);\r\n            localStorage.setItem('tic-tac-toe-scores', JSON.stringify(updatedScores));\r\n        }\r\n    }, [winner, isDraw]);\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + (playerNames[winner] || winner);\r\n    } else if (isDraw) {\r\n        status = 'Draw';\r\n    } else {\r\n        status = 'Next player: ' + (isXNext ? playerNames.X || 'Player 1' : playerNames.O || 'Player 2');\r\n    }\r\n\r\n\r\n    const renderSquare = (i) => {\r\n        const isWinningSquare = winner && winner.line.includes(i);\r\n        const cellClass = board[i] === 'X' ? 'cell green' : 'cell red';\r\n        return (\r\n            <button\r\n                className={`${cellClass} ${isWinningSquare ? 'winning-square' : ''}`}\r\n                onClick={() => handleClick(i)}\r\n            >\r\n                {board[i]}\r\n            </button>\r\n        );\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container1\">\r\n            <div className=\"marquee\">Tic Tac Toe</div>\r\n\r\n            <div className=\"button-group\">\r\n                <button onClick={handlePlayWithFriendClick} className=\"action-button\">Play with Friend</button>\r\n                <button onClick={handlePlayWithComputerClick} className=\"action-button\">Play with Computer</button>\r\n                <button onClick={handleViewScoresClick} className=\"action-button\">View Scores</button>\r\n                <button onClick={handleFeedbackClick} className=\"action-button\">Give Feedback</button>\r\n            </div>\r\n\r\n            {inputNamesVisible && (\r\n                <div className=\"player-name-inputs\">\r\n                    {isPlayingWithComputer ? (\r\n                        <div>\r\n                            <label htmlFor=\"playerInput\">Your Name:</label>\r\n                            <input\r\n                                id=\"playerInput\"\r\n                                type=\"text\"\r\n                                value={playerInput}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter your name\"\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div>\r\n                                <label htmlFor=\"playerX\">Player X Name:</label>\r\n                                <input\r\n                                    id=\"playerX\"\r\n                                    type=\"text\"\r\n                                    value={playerNames.X}\r\n                                    onChange={(e) => handleNameChange(e, 'X')}\r\n                                    placeholder=\"Enter Player 1's name\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"playerO\">Player O Name:</label>\r\n                                <input\r\n                                    id=\"playerO\"\r\n                                    type=\"text\"\r\n                                    value={playerNames.O}\r\n                                    onChange={(e) => handleNameChange(e, 'O')}\r\n                                    placeholder=\"Enter Player 2's name\"\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <button onClick={handleStartGame} className=\"action-button\">Start Game</button>\r\n                </div>\r\n            )}\r\n\r\n            {!inputNamesVisible && (\r\n                <div className=\"game-board\">\r\n                    <div className=\"message\">{status}</div>\r\n                    <div className=\"board\">\r\n                        {renderSquare(0)}\r\n                        {renderSquare(1)}\r\n                        {renderSquare(2)}\r\n                        {renderSquare(3)}\r\n                        {renderSquare(4)}\r\n                        {renderSquare(5)}\r\n                        {renderSquare(6)}\r\n                        {renderSquare(7)}\r\n                        {renderSquare(8)}\r\n                    </div>\r\n                    {(winner || isDraw) && (\r\n                        <div className=\"popup\">\r\n                            <div className=\"winner-box\">{status}</div>\r\n                            <button id=\"replayBtn\" onClick={handleReplayClick}>\r\n                                Replay\r\n                            </button>\r\n                            <button onClick={handleFeedbackClick} id=\"feedbackBtn\">\r\n                                Give Feedback\r\n                            </button>\r\n                            <button onClick={handleBackToHome} className=\"back-to-home-button\">\r\n                                Back to Home\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Helper function to determine the winner\r\nconst calculateWinner = (squares) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return [a, b, c];\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport default TicTacToe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}