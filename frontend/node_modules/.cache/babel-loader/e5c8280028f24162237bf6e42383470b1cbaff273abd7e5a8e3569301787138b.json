{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Web\\\\MoneyConversion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoneyConversion = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [result, setResult] = useState('');\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [value, setValue] = useState('');\n  const currencies = {\n    USD: 'US Dollar',\n    EUR: 'Euro',\n    GBP: 'British Pound',\n    JPY: 'Japanese Yen',\n    AUD: 'Australian Dollar',\n    CAD: 'Canadian Dollar',\n    INR: 'Indian Rupee',\n    CNY: 'Chinese Yuan'\n  };\n  const conversionRates = {\n    USD: {\n      USD: 1.00,\n      EUR: 0.93,\n      GBP: 0.82,\n      JPY: 137.51,\n      AUD: 1.52,\n      CAD: 1.36,\n      INR: 82.65,\n      CNY: 7.16\n    },\n    EUR: {\n      EUR: 1.00,\n      USD: 1.08,\n      GBP: 0.88,\n      JPY: 147.74,\n      AUD: 1.63,\n      CAD: 1.46,\n      INR: 88.74,\n      CNY: 7.69\n    },\n    GBP: {}\n    // Add other conversion rates here\n    // ...\n  };\n  const convertMoney = () => {\n    if (fromCurrency === toCurrency) {\n      // If the from and to currencies are the same, no conversion is needed\n      setResult(`${value} ${toCurrency}`);\n    } else if (conversionRates[fromCurrency] && conversionRates[fromCurrency][toCurrency]) {\n      const rate = conversionRates[fromCurrency][toCurrency];\n      const convertedValue = Number(value) * rate;\n      setResult(`${convertedValue.toFixed(2)} ${toCurrency}`);\n    } else {\n      setResult('Conversion not supported');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"money-conversion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Money Conversion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversion-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromCurrency,\n          onChange: e => setFromCurrency(e.target.value),\n          children: Object.keys(currencies).map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: currency,\n            children: currencies[currency]\n          }, currency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"To: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: toCurrency,\n          onChange: e => setToCurrency(e.target.value),\n          children: Object.keys(currencies).map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: currency,\n            children: currencies[currency]\n          }, currency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"convert-button\",\n      onClick: convertMoney,\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversion-result\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Result: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(MoneyConversion, \"coIDRy0IWCpRc1B/vJOMGaqETPM=\");\n_c = MoneyConversion;\nexport default MoneyConversion;\nvar _c;\n$RefreshReg$(_c, \"MoneyConversion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MoneyConversion","_s","inputValue","setInputValue","result","setResult","fromCurrency","setFromCurrency","toCurrency","setToCurrency","value","setValue","currencies","USD","EUR","GBP","JPY","AUD","CAD","INR","CNY","conversionRates","convertMoney","rate","convertedValue","Number","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","Object","keys","map","currency","type","onClick","_c","$RefreshReg$"],"sources":["D:/portfolio/frontend/src/components/Web/MoneyConversion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './calculator.css';\r\n\r\nconst MoneyConversion = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [result, setResult] = useState('');\r\n    const [fromCurrency, setFromCurrency] = useState('USD');\r\n    const [toCurrency, setToCurrency] = useState('EUR');\r\n    const [value, setValue] = useState('');\r\n\r\n    const currencies = {\r\n        USD: 'US Dollar',\r\n        EUR: 'Euro',\r\n        GBP: 'British Pound',\r\n        JPY: 'Japanese Yen',\r\n        AUD: 'Australian Dollar',\r\n        CAD: 'Canadian Dollar',\r\n        INR: 'Indian Rupee',\r\n        CNY: 'Chinese Yuan',\r\n    };\r\n\r\n    const conversionRates = {\r\n        USD: {\r\n            USD:1.00,\r\n            EUR: 0.93,\r\n            GBP: 0.82,\r\n            JPY: 137.51,\r\n            AUD: 1.52,\r\n            CAD: 1.36,\r\n            INR: 82.65,\r\n            CNY: 7.16,\r\n        },\r\n        EUR: {\r\n            EUR:1.00,\r\n            USD: 1.08,\r\n            GBP: 0.88,\r\n            JPY: 147.74,\r\n            AUD: 1.63,\r\n            CAD: 1.46,\r\n            INR: 88.74,\r\n            CNY: 7.69,\r\n        },\r\n        GBP:{\r\n\r\n        }\r\n        // Add other conversion rates here\r\n        // ...\r\n    };\r\n\r\n    const convertMoney = () => {\r\n        if (fromCurrency === toCurrency) {\r\n            // If the from and to currencies are the same, no conversion is needed\r\n            setResult(`${value} ${toCurrency}`);\r\n        } else if (conversionRates[fromCurrency] && conversionRates[fromCurrency][toCurrency]) {\r\n            const rate = conversionRates[fromCurrency][toCurrency];\r\n            const convertedValue = Number(value) * rate;\r\n            setResult(`${convertedValue.toFixed(2)} ${toCurrency}`);\r\n        } else {\r\n            setResult('Conversion not supported');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"money-conversion\">\r\n            <h2>Money Conversion</h2>\r\n\r\n            <div className=\"conversion-inputs\">\r\n                <div>\r\n                    <label>From: </label>\r\n                    <select value={fromCurrency} onChange={(e) => setFromCurrency(e.target.value)}>\r\n                        {Object.keys(currencies).map(currency => (\r\n                            <option key={currency} value={currency}>{currencies[currency]}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>To: </label>\r\n                    <select value={toCurrency} onChange={(e) => setToCurrency(e.target.value)}>\r\n                        {Object.keys(currencies).map(currency => (\r\n                            <option key={currency} value={currency}>{currencies[currency]}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Value: </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"convert-button\" onClick={convertMoney}>Convert</button>\r\n\r\n            {result && (\r\n                <div className=\"conversion-result\">\r\n                    <h3>Result: {result}</h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoneyConversion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}