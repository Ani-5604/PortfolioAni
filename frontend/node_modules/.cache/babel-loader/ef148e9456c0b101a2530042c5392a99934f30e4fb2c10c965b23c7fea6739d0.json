{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./TicTacToe.css';import FeedbackForm from'../Feedbaackform';// Ensure this path is correct\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TicTacToe=()=>{const[board,setBoard]=useState(Array(9).fill(null));const[isXNext,setIsXNext]=useState(true);const[isPlayingWithComputer,setIsPlayingWithComputer]=useState(false);const[playerNames,setPlayerNames]=useState({X:'',O:''});const[scores,setScores]=useState({X:0,O:0,Draws:0});const[inputNamesVisible,setInputNamesVisible]=useState(false);const[playerInput,setPlayerInput]=useState('');const[highlightedInputs,setHighlightedInputs]=useState({X:false,O:false});// For highlighting inputs\nconst navigate=useNavigate();const cheerEmoji='\\uD83D\\uDC4F';useEffect(()=>{const storedScores=JSON.parse(localStorage.getItem('tic-tac-toe-scores'));if(storedScores){setScores(storedScores);}},[]);useEffect(()=>{if(isPlayingWithComputer&&!isXNext&&!calculateWinner(board).length){const timer=setTimeout(makeComputerMove,500);return()=>clearTimeout(timer);}},[board,isXNext,isPlayingWithComputer]);const handleClick=index=>{const newBoard=board.slice();if(calculateWinner(board).length||board[index])return;newBoard[index]=isXNext?'X':'O';setBoard(newBoard);setIsXNext(!isXNext);};const handleBackToHome=()=>{navigate('/');// Adjust the route as needed\n};const makeComputerMove=()=>{const availableMoves=board.map((val,index)=>val===null?index:null).filter(val=>val!==null);const randomMove=availableMoves[Math.floor(Math.random()*availableMoves.length)];handleClick(randomMove);};const handleReplayClick=()=>{setBoard(Array(9).fill(null));setIsXNext(true);setHighlightedInputs({X:false,O:false});// Reset input highlights\n};const handleFeedbackClick=()=>{navigate('/FeedbackForm');};const handlePlayWithFriendClick=()=>{setInputNamesVisible(true);setIsPlayingWithComputer(false);};const handlePlayWithComputerClick=()=>{setInputNamesVisible(true);setIsPlayingWithComputer(true);};const handleViewScoresClick=()=>{alert(`Scores:\\n${playerNames.X||'Player 1'}: ${scores.X}\\n${playerNames.O||'Player 2'}: ${scores.O}\\nDraws: ${scores.Draws}:${String.fromCodePoint(0x1F3C6)}`);};const handleNameChange=(event,player)=>{setPlayerNames({...playerNames,[player]:event.target.value});};const handleInputChange=event=>{setPlayerInput(event.target.value);};const handleStartGame=()=>{if(isPlayingWithComputer){if(playerInput){setPlayerNames({X:playerInput,O:'Computer'});setInputNamesVisible(false);handleReplayClick();}else{alert('Please enter your name.');}}else{if(playerNames.X&&playerNames.O){setInputNamesVisible(false);handleReplayClick();}else{alert('Please enter names for both players.');}}};const winnerLine=calculateWinner(board);const winner=winnerLine.length?board[winnerLine[0]]:null;const isDraw=!winner&&board.every(square=>square!==null);useEffect(()=>{if(winner||isDraw){let updatedScores={...scores};if(winner){updatedScores[winner]++;setHighlightedInputs({X:winner==='X',O:winner==='O'});// Highlight the winning input\n}else if(isDraw){updatedScores.Draws++;}setScores(updatedScores);localStorage.setItem('tic-tac-toe-scores',JSON.stringify(updatedScores));}},[winner,isDraw]);let status;if(winner){status='Winner: '+(playerNames[winner]||winner)+String.fromCodePoint(0x1F3C6);}else if(isDraw){status='It\\'s a Draw!'+cheerEmoji;}else{status='Next player: '+(isXNext?playerNames.X||'Player 1':playerNames.O||'Player 2');}const renderSquare=i=>{const isWinningSquare=winnerLine.includes(i);const cellClass=board[i]==='X'?'cell green':'cell red';return/*#__PURE__*/_jsx(\"button\",{className:`${cellClass} ${isWinningSquare?'winning-square':''}`,onClick:()=>handleClick(i),children:board[i]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"marquee\",children:\"Tic Tac Toe\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePlayWithFriendClick,className:\"action-button\",children:\"Play with Friend\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePlayWithComputerClick,className:\"action-button\",children:\"Play with Computer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleViewScoresClick,className:\"action-button\",children:\"View Scores\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFeedbackClick,className:\"action-button\",children:\"Give Feedback\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToHome,className:\"action-button\",children:\"Back to Home\"})]}),inputNamesVisible&&/*#__PURE__*/_jsxs(\"div\",{className:\"player-name-inputs\",children:[isPlayingWithComputer?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerInput\",children:\"Your Name:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"playerInput\",type:\"text\",value:playerInput,onChange:handleInputChange,placeholder:\"Enter your name\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:highlightedInputs.X?'highlight-input':'',children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerX\",children:\"Player X Name:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"playerX\",type:\"text\",value:playerNames.X,onChange:e=>handleNameChange(e,'X'),placeholder:\"Enter name for Player X\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:highlightedInputs.O?'highlight-input':'',children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerO\",children:\"Player O Name:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"playerO\",type:\"text\",value:playerNames.O,onChange:e=>handleNameChange(e,'O'),placeholder:\"Enter name for Player O\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleStartGame,className:\"start-button\",children:\"Start Game\"})]}),!inputNamesVisible&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-board\",children:[/*#__PURE__*/_jsx(\"div\",{className:`message ${winner?'winner-box':isDraw?'draw-box':''}`,children:status}),/*#__PURE__*/_jsxs(\"div\",{className:\"board\",children:[renderSquare(0),renderSquare(1),renderSquare(2),renderSquare(3),renderSquare(4),renderSquare(5),renderSquare(6),renderSquare(7),renderSquare(8)]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReplayClick,className:\"replay-button\",children:\"Replay\"})]})]});};function calculateWinner(squares){const lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(let i=0;i<lines.length;i++){const[a,b,c]=lines[i];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){return[a,b,c];}}return[];}export default TicTacToe;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FeedbackForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TicTacToe","board","setBoard","Array","fill","isXNext","setIsXNext","isPlayingWithComputer","setIsPlayingWithComputer","playerNames","setPlayerNames","X","O","scores","setScores","Draws","inputNamesVisible","setInputNamesVisible","playerInput","setPlayerInput","highlightedInputs","setHighlightedInputs","navigate","cheerEmoji","storedScores","JSON","parse","localStorage","getItem","calculateWinner","length","timer","setTimeout","makeComputerMove","clearTimeout","handleClick","index","newBoard","slice","handleBackToHome","availableMoves","map","val","filter","randomMove","Math","floor","random","handleReplayClick","handleFeedbackClick","handlePlayWithFriendClick","handlePlayWithComputerClick","handleViewScoresClick","alert","String","fromCodePoint","handleNameChange","event","player","target","value","handleInputChange","handleStartGame","winnerLine","winner","isDraw","every","square","updatedScores","setItem","stringify","status","renderSquare","i","isWinningSquare","includes","cellClass","className","onClick","children","htmlFor","id","type","onChange","placeholder","e","squares","lines","a","b","c"],"sources":["D:/New folder (2)/portfolio/frontend/src/components/Web/TicTacToe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TicTacToe.css';\r\nimport FeedbackForm from '../Feedbaackform'; // Ensure this path is correct\r\n\r\nconst TicTacToe = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [isXNext, setIsXNext] = useState(true);\r\n    const [isPlayingWithComputer, setIsPlayingWithComputer] = useState(false);\r\n    const [playerNames, setPlayerNames] = useState({ X: '', O: '' });\r\n    const [scores, setScores] = useState({ X: 0, O: 0, Draws: 0 });\r\n    const [inputNamesVisible, setInputNamesVisible] = useState(false);\r\n    const [playerInput, setPlayerInput] = useState('');\r\n    const [highlightedInputs, setHighlightedInputs] = useState({ X: false, O: false }); // For highlighting inputs\r\n    const navigate = useNavigate();\r\n    const cheerEmoji = '\\uD83D\\uDC4F';\r\n\r\n  \r\n    useEffect(() => {\r\n        const storedScores = JSON.parse(localStorage.getItem('tic-tac-toe-scores'));\r\n        if (storedScores) {\r\n            setScores(storedScores);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isPlayingWithComputer && !isXNext && !calculateWinner(board).length) {\r\n            const timer = setTimeout(makeComputerMove, 500);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [board, isXNext, isPlayingWithComputer]);\r\n\r\n    const handleClick = (index) => {\r\n        const newBoard = board.slice();\r\n        if (calculateWinner(board).length || board[index]) return;\r\n        newBoard[index] = isXNext ? 'X' : 'O';\r\n        setBoard(newBoard);\r\n        setIsXNext(!isXNext);\r\n    };\r\n\r\n    const handleBackToHome = () => {\r\n        navigate('/'); // Adjust the route as needed\r\n    };\r\n\r\n    const makeComputerMove = () => {\r\n        const availableMoves = board.map((val, index) => (val === null ? index : null)).filter(val => val !== null);\r\n        const randomMove = availableMoves[Math.floor(Math.random() * availableMoves.length)];\r\n        handleClick(randomMove);\r\n    };\r\n\r\n    const handleReplayClick = () => {\r\n        setBoard(Array(9).fill(null));\r\n        setIsXNext(true);\r\n        setHighlightedInputs({ X: false, O: false }); // Reset input highlights\r\n    };\r\n\r\n    const handleFeedbackClick = () => {\r\n        navigate('/FeedbackForm');\r\n    };\r\n\r\n    const handlePlayWithFriendClick = () => {\r\n        setInputNamesVisible(true);\r\n        setIsPlayingWithComputer(false);\r\n    };\r\n\r\n    const handlePlayWithComputerClick = () => {\r\n        setInputNamesVisible(true);\r\n        setIsPlayingWithComputer(true);\r\n    };\r\n\r\n    const handleViewScoresClick = () => {\r\n        alert(`Scores:\\n${playerNames.X || 'Player 1'}: ${scores.X}\\n${playerNames.O || 'Player 2'}: ${scores.O}\\nDraws: ${scores.Draws}:${String.fromCodePoint(0x1F3C6)}`);\r\n    };\r\n\r\n    const handleNameChange = (event, player) => {\r\n        setPlayerNames({\r\n            ...playerNames,\r\n            [player]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setPlayerInput(event.target.value);\r\n    };\r\n\r\n    const handleStartGame = () => {\r\n        if (isPlayingWithComputer) {\r\n            if (playerInput) {\r\n                setPlayerNames({ X: playerInput, O: 'Computer' });\r\n                setInputNamesVisible(false);\r\n                handleReplayClick();\r\n            } else {\r\n                alert('Please enter your name.');\r\n            }\r\n        } else {\r\n            if (playerNames.X && playerNames.O) {\r\n                setInputNamesVisible(false);\r\n                handleReplayClick();\r\n            } else {\r\n                alert('Please enter names for both players.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const winnerLine = calculateWinner(board);\r\n    const winner = winnerLine.length ? board[winnerLine[0]] : null;\r\n    const isDraw = !winner && board.every(square => square !== null);\r\n\r\n    useEffect(() => {\r\n        if (winner || isDraw) {\r\n            let updatedScores = { ...scores };\r\n            if (winner) {\r\n                updatedScores[winner]++;\r\n                setHighlightedInputs({\r\n                    X: winner === 'X',\r\n                    O: winner === 'O'\r\n                }); // Highlight the winning input\r\n            } else if (isDraw) {\r\n                updatedScores.Draws++;\r\n            }\r\n            setScores(updatedScores);\r\n            localStorage.setItem('tic-tac-toe-scores', JSON.stringify(updatedScores));\r\n        }\r\n    }, [winner, isDraw]);\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + (playerNames[winner] || winner)+String.fromCodePoint(0x1F3C6);\r\n    } else if (isDraw) {\r\n        status = 'It\\'s a Draw!'+ cheerEmoji  ;\r\n        \r\n    } else {\r\n        status = 'Next player: ' + (isXNext ? playerNames.X || 'Player 1' : playerNames.O || 'Player 2');\r\n    }\r\n\r\n    const renderSquare = (i) => {\r\n        const isWinningSquare = winnerLine.includes(i);\r\n        const cellClass = board[i] === 'X' ? 'cell green' : 'cell red';\r\n        return (\r\n            <button\r\n                className={`${cellClass} ${isWinningSquare ? 'winning-square' : ''}`}\r\n                onClick={() => handleClick(i)}\r\n            >\r\n                {board[i]}\r\n            </button>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container1\">\r\n            <div className=\"marquee\">Tic Tac Toe</div>\r\n\r\n            <div className=\"button-group\">\r\n                <button onClick={handlePlayWithFriendClick} className=\"action-button\">Play with Friend</button>\r\n                <button onClick={handlePlayWithComputerClick} className=\"action-button\">Play with Computer</button>\r\n                <button onClick={handleViewScoresClick} className=\"action-button\">View Scores</button>\r\n                <button onClick={handleFeedbackClick} className=\"action-button\">Give Feedback</button>\r\n                <button onClick={handleBackToHome} className=\"action-button\">Back to Home</button>\r\n            </div>\r\n\r\n            {inputNamesVisible && (\r\n                <div className=\"player-name-inputs\">\r\n                    {isPlayingWithComputer ? (\r\n                        <div>\r\n                            <label htmlFor=\"playerInput\">Your Name:</label>\r\n                            <input\r\n                                id=\"playerInput\"\r\n                                type=\"text\"\r\n                                value={playerInput}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter your name\"\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className={highlightedInputs.X ? 'highlight-input' : ''}>\r\n                                <label htmlFor=\"playerX\">Player X Name:</label>\r\n                                <input\r\n                                    id=\"playerX\"\r\n                                    type=\"text\"\r\n                                    value={playerNames.X}\r\n                                    onChange={(e) => handleNameChange(e, 'X')}\r\n                                    placeholder=\"Enter name for Player X\"\r\n                                />\r\n                            </div>\r\n                            <div className={highlightedInputs.O ? 'highlight-input' : ''}>\r\n                                <label htmlFor=\"playerO\">Player O Name:</label>\r\n                                <input\r\n                                    id=\"playerO\"\r\n                                    type=\"text\"\r\n                                    value={playerNames.O}\r\n                                    onChange={(e) => handleNameChange(e, 'O')}\r\n                                    placeholder=\"Enter name for Player O\"\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    <button onClick={handleStartGame} className=\"start-button\">Start Game</button>\r\n                </div>\r\n            )}\r\n\r\n            {!inputNamesVisible && (\r\n                <div className=\"game-board\">\r\n                    <div className={`message ${winner ? 'winner-box' : isDraw ? 'draw-box' : ''}`}>{status}</div>\r\n                    <div className=\"board\">\r\n                        {renderSquare(0)}\r\n                        {renderSquare(1)}\r\n                        {renderSquare(2)}\r\n                        {renderSquare(3)}\r\n                        {renderSquare(4)}\r\n                        {renderSquare(5)}\r\n                        {renderSquare(6)}\r\n                        {renderSquare(7)}\r\n                        {renderSquare(8)}\r\n                    </div>\r\n                    <button onClick={handleReplayClick} className=\"replay-button\">Replay</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return [a, b, c];\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport default TicTacToe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}