{"ast":null,"code":"var _jsxFileName = \"D:\\\\portfolio\\\\frontend\\\\src\\\\components\\\\Web\\\\MeasurementConversion.js\",\n  _s = $RefreshSig$();\n// src/MeasurementConversion.js\nimport React, { useState } from 'react';\nimport './calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MeasurementConversion = () => {\n  _s();\n  const [fromUnit, setFromUnit] = useState('grams');\n  const [toUnit, setToUnit] = useState('kilograms');\n  const [inputValue, setInputValue] = useState('');\n  const [result, setResult] = useState('');\n  const weightUnits = ['grams', 'kilograms', 'pounds', 'ounces'];\n  const convertWeight = () => {\n    let conversionFactor = 1;\n\n    // Conversion factors for weight\n    const conversionTable = {\n      grams: {\n        kilograms: 0.001,\n        pounds: 0.00220462,\n        ounces: 0.035274\n      },\n      kilograms: {\n        grams: 1000,\n        pounds: 2.20462,\n        ounces: 35.274\n      },\n      pounds: {\n        grams: 453.592,\n        kilograms: 0.453592,\n        ounces: 16\n      },\n      ounces: {\n        grams: 28.3495,\n        kilograms: 0.0283495,\n        pounds: 0.0625\n      }\n    };\n    if (fromUnit !== toUnit) {\n      conversionFactor = conversionTable[fromUnit][toUnit];\n    }\n    setResult(Number(inputValue) * conversionFactor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"measurement-conversion\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-label\",\n      children: \"Weight Conversion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversion-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"input-field\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Enter weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unit-selectors\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromUnit,\n          onChange: e => setFromUnit(e.target.value),\n          children: weightUnits.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: unit,\n            children: unit\n          }, unit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: toUnit,\n          onChange: e => setToUnit(e.target.value),\n          children: weightUnits.map(unit => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: unit,\n            children: unit\n          }, unit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"convert-button\",\n        onClick: convertWeight,\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: `Result: ${result} ${toUnit}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(MeasurementConversion, \"ghDVbXr5SQXSjd6uMeVjljRBCJE=\");\n_c = MeasurementConversion;\nexport default MeasurementConversion;\nvar _c;\n$RefreshReg$(_c, \"MeasurementConversion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MeasurementConversion","_s","fromUnit","setFromUnit","toUnit","setToUnit","inputValue","setInputValue","result","setResult","weightUnits","convertWeight","conversionFactor","conversionTable","grams","kilograms","pounds","ounces","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","unit","onClick","_c","$RefreshReg$"],"sources":["D:/portfolio/frontend/src/components/Web/MeasurementConversion.js"],"sourcesContent":["// src/MeasurementConversion.js\r\nimport React, { useState } from 'react';\r\nimport './calculator.css';\r\n\r\nconst MeasurementConversion = () => {\r\n    const [fromUnit, setFromUnit] = useState('grams');\r\n    const [toUnit, setToUnit] = useState('kilograms');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [result, setResult] = useState('');\r\n\r\n    const weightUnits = ['grams', 'kilograms', 'pounds', 'ounces'];\r\n\r\n    const convertWeight = () => {\r\n        let conversionFactor = 1;\r\n\r\n        // Conversion factors for weight\r\n        const conversionTable = {\r\n            grams: {\r\n                kilograms: 0.001,\r\n                pounds: 0.00220462,\r\n                ounces: 0.035274,\r\n            },\r\n            kilograms: {\r\n                grams: 1000,\r\n                pounds: 2.20462,\r\n                ounces: 35.274,\r\n            },\r\n            pounds: {\r\n                grams: 453.592,\r\n                kilograms: 0.453592,\r\n                ounces: 16,\r\n            },\r\n            ounces: {\r\n                grams: 28.3495,\r\n                kilograms: 0.0283495,\r\n                pounds: 0.0625,\r\n            },\r\n        };\r\n\r\n        if (fromUnit !== toUnit) {\r\n            conversionFactor = conversionTable[fromUnit][toUnit];\r\n        }\r\n\r\n        setResult(Number(inputValue) * conversionFactor);\r\n    };\r\n\r\n    return (\r\n        <div className=\"measurement-conversion\">\r\n            <div className=\"calculator-label\">Weight Conversion</div>\r\n            <div className=\"conversion-section\">\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"input-field\"\r\n                    value={inputValue}\r\n                    onChange={(e) => setInputValue(e.target.value)}\r\n                    placeholder=\"Enter weight\"\r\n                />\r\n                <div className=\"unit-selectors\">\r\n                    <select value={fromUnit} onChange={(e) => setFromUnit(e.target.value)}>\r\n                        {weightUnits.map((unit) => (\r\n                            <option key={unit} value={unit}>{unit}</option>\r\n                        ))}\r\n                    </select>\r\n                    <span>to</span>\r\n                    <select value={toUnit} onChange={(e) => setToUnit(e.target.value)}>\r\n                        {weightUnits.map((unit) => (\r\n                            <option key={unit} value={unit}>{unit}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <button className=\"convert-button\" onClick={convertWeight}>Convert</button>\r\n                {result && <div className=\"result\">{`Result: ${result} ${toUnit}`}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MeasurementConversion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}