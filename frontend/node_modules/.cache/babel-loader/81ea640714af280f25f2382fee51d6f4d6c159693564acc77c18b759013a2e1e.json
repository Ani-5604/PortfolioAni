{"ast":null,"code":"import React,{useState}from'react';import'./calculator.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MoneyConversion=()=>{const[inputValue,setInputValue]=useState('');const[result,setResult]=useState('');const[fromCurrency,setFromCurrency]=useState('USD');const[toCurrency,setToCurrency]=useState('EUR');const[value,setValue]=useState('');const currencies={USD:'US Dollar',EUR:'Euro',GBP:'British Pound',JPY:'Japanese Yen',AUD:'Australian Dollar',CAD:'Canadian Dollar',INR:'Indian Rupee',CNY:'Chinese Yuan'};const conversionRates={USD:{USD:1.00,EUR:0.93,GBP:0.82,JPY:137.51,AUD:1.52,CAD:1.36,INR:82.65,CNY:7.16},EUR:{EUR:1.00,USD:1.08,GBP:0.88,JPY:147.74,AUD:1.63,CAD:1.46,INR:88.74,CNY:7.69},GBP:{}// Add other conversion rates here\n// ...\n};const convertMoney=()=>{if(fromCurrency===toCurrency){// If the from and to currencies are the same, no conversion is needed\nsetResult(`${value} ${toCurrency}`);}else if(conversionRates[fromCurrency]&&conversionRates[fromCurrency][toCurrency]){const rate=conversionRates[fromCurrency][toCurrency];const convertedValue=Number(value)*rate;setResult(`${convertedValue.toFixed(2)} ${toCurrency}`);}else{setResult('Conversion not supported');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"money-conversion\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Money Conversion\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"conversion-inputs\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"From: \"}),/*#__PURE__*/_jsx(\"select\",{value:fromCurrency,onChange:e=>setFromCurrency(e.target.value),children:Object.keys(currencies).map(currency=>/*#__PURE__*/_jsx(\"option\",{value:currency,children:currencies[currency]},currency))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"To: \"}),/*#__PURE__*/_jsx(\"select\",{value:toCurrency,onChange:e=>setToCurrency(e.target.value),children:Object.keys(currencies).map(currency=>/*#__PURE__*/_jsx(\"option\",{value:currency,children:currencies[currency]},currency))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Value: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:value,onChange:e=>setValue(e.target.value)})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"convert-button\",onClick:convertMoney,children:\"Convert\"}),result&&/*#__PURE__*/_jsx(\"div\",{className:\"conversion-result\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Result: \",result]})})]});};export default MoneyConversion;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","MoneyConversion","inputValue","setInputValue","result","setResult","fromCurrency","setFromCurrency","toCurrency","setToCurrency","value","setValue","currencies","USD","EUR","GBP","JPY","AUD","CAD","INR","CNY","conversionRates","convertMoney","rate","convertedValue","Number","toFixed","className","children","onChange","e","target","Object","keys","map","currency","type","onClick"],"sources":["D:/New folder (2)/portfolio/FRONTEND/src/components/Web/MoneyConversion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './calculator.css';\r\n\r\nconst MoneyConversion = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [result, setResult] = useState('');\r\n    const [fromCurrency, setFromCurrency] = useState('USD');\r\n    const [toCurrency, setToCurrency] = useState('EUR');\r\n    const [value, setValue] = useState('');\r\n\r\n    const currencies = {\r\n        USD: 'US Dollar',\r\n        EUR: 'Euro',\r\n        GBP: 'British Pound',\r\n        JPY: 'Japanese Yen',\r\n        AUD: 'Australian Dollar',\r\n        CAD: 'Canadian Dollar',\r\n        INR: 'Indian Rupee',\r\n        CNY: 'Chinese Yuan',\r\n    };\r\n\r\n    const conversionRates = {\r\n        USD: {\r\n            USD:1.00,\r\n            EUR: 0.93,\r\n            GBP: 0.82,\r\n            JPY: 137.51,\r\n            AUD: 1.52,\r\n            CAD: 1.36,\r\n            INR: 82.65,\r\n            CNY: 7.16,\r\n        },\r\n        EUR: {\r\n            EUR:1.00,\r\n            USD: 1.08,\r\n            GBP: 0.88,\r\n            JPY: 147.74,\r\n            AUD: 1.63,\r\n            CAD: 1.46,\r\n            INR: 88.74,\r\n            CNY: 7.69,\r\n        },\r\n        GBP:{\r\n\r\n        }\r\n        // Add other conversion rates here\r\n        // ...\r\n    };\r\n\r\n    const convertMoney = () => {\r\n        if (fromCurrency === toCurrency) {\r\n            // If the from and to currencies are the same, no conversion is needed\r\n            setResult(`${value} ${toCurrency}`);\r\n        } else if (conversionRates[fromCurrency] && conversionRates[fromCurrency][toCurrency]) {\r\n            const rate = conversionRates[fromCurrency][toCurrency];\r\n            const convertedValue = Number(value) * rate;\r\n            setResult(`${convertedValue.toFixed(2)} ${toCurrency}`);\r\n        } else {\r\n            setResult('Conversion not supported');\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"money-conversion\">\r\n            <h2>Money Conversion</h2>\r\n\r\n            <div className=\"conversion-inputs\">\r\n                <div>\r\n                    <label>From: </label>\r\n                    <select value={fromCurrency} onChange={(e) => setFromCurrency(e.target.value)}>\r\n                        {Object.keys(currencies).map(currency => (\r\n                            <option key={currency} value={currency}>{currencies[currency]}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>To: </label>\r\n                    <select value={toCurrency} onChange={(e) => setToCurrency(e.target.value)}>\r\n                        {Object.keys(currencies).map(currency => (\r\n                            <option key={currency} value={currency}>{currencies[currency]}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Value: </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"convert-button\" onClick={convertMoney}>Convert</button>\r\n\r\n            {result && (\r\n                <div className=\"conversion-result\">\r\n                    <h3>Result: {result}</h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoneyConversion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}